{"ast":null,"code":"export async function fetchUsers() {\n  try {\n    const response = await fetch('https://jsonplaceholder.typicode.com/users');\n    if (!response.ok) {\n      throw new Error('Failed to fetch users');\n    }\n    const users = await response.json();\n    return users.map((user, index) => ({\n      id: user.id,\n      name: user.name,\n      email: user.email,\n      // Assuming 'joinedOn' and 'commentCount' are not provided by the API\n      joinedOn: new Date(),\n      // Placeholder for 'joinedOn' field\n      commentCount: Math.floor(Math.random() * 101) // Placeholder for 'commentCount' field\n    }));\n  } catch (error) {\n    console.error('Error fetching users:', error);\n    return []; // Return an empty array or handle the error accordingly\n  }\n}","map":{"version":3,"names":["fetchUsers","response","fetch","ok","Error","users","json","map","user","index","id","name","email","joinedOn","Date","commentCount","Math","floor","random","error","console"],"sources":["D:/Study/Semester 6/EAD/Usage of Web Workers in Modern Web Applications/my-react-app/src/services/fetchUser.js"],"sourcesContent":["export async function fetchUsers() {\r\n    try {\r\n        const response = await fetch('https://jsonplaceholder.typicode.com/users');\r\n        if (!response.ok) {\r\n            throw new Error('Failed to fetch users');\r\n        }\r\n        const users = await response.json();\r\n\r\n        return users.map((user, index) => ({\r\n            id: user.id,\r\n            name: user.name,\r\n            email: user.email,\r\n            // Assuming 'joinedOn' and 'commentCount' are not provided by the API\r\n            joinedOn: new Date(), // Placeholder for 'joinedOn' field\r\n            commentCount: Math.floor(Math.random() * 101) // Placeholder for 'commentCount' field\r\n        }));\r\n    } catch (error) {\r\n        console.error('Error fetching users:', error);\r\n        return []; // Return an empty array or handle the error accordingly\r\n    }\r\n}\r\n"],"mappings":"AAAA,OAAO,eAAeA,UAAUA,CAAA,EAAG;EAC/B,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAA4C,CAAC;IAC1E,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;IAC5C;IACA,MAAMC,KAAK,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAEnC,OAAOD,KAAK,CAACE,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,MAAM;MAC/BC,EAAE,EAAEF,IAAI,CAACE,EAAE;MACXC,IAAI,EAAEH,IAAI,CAACG,IAAI;MACfC,KAAK,EAAEJ,IAAI,CAACI,KAAK;MACjB;MACAC,QAAQ,EAAE,IAAIC,IAAI,CAAC,CAAC;MAAE;MACtBC,YAAY,EAAEC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;IAClD,CAAC,CAAC,CAAC;EACP,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,OAAO,EAAE,CAAC,CAAC;EACf;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}