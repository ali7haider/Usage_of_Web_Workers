{"ast":null,"code":"//     const faker = require('faker');\n\n// function fetchUsers() {\n//     let users = [];\n\n//     for (let i = 0; i < 5000; i++) {\n//         let id = i + 1;\n//         let name = faker.name.findName();\n//         let email = faker.internet.email();\n//         let joinedOn = faker.date.recent();\n//         let commentCount = faker.random.number({ min: 0, max: 100 });\n//         let country = faker.address.country();\n//         let jobTitle = faker.name.jobTitle();\n//         let phoneNumber = faker.phone.phoneNumber();\n//         let avatar = faker.internet.avatar();\n//         let user = {\n//             id,\n//             name,\n//             email,\n//             joinedOn,\n//             commentCount,\n//             country,\n//             jobTitle,\n//             phoneNumber,\n//             avatar\n//         };\n//         users.push(user);\n//     }\n\n//     return users;\n// }\n\n// module.exports = fetchUsers;\nimport { faker } from '@faker-js/faker';\nexport function fetchUsers() {\n  const users = [];\n  for (let i = 0; i < 25000; i++) {\n    let id = i + 1;\n    let name = faker.person.fullName();\n    let email = faker.internet.email();\n    let joinedOn = faker.date.recent();\n    let commentCount = faker.number.int({\n      min: 0,\n      max: 100\n    });\n    let user = {\n      id,\n      name,\n      email,\n      joinedOn,\n      commentCount\n    };\n    users.push(user);\n  }\n  return Promise.resolve(users);\n}","map":{"version":3,"names":["faker","fetchUsers","users","i","id","name","person","fullName","email","internet","joinedOn","date","recent","commentCount","number","int","min","max","user","push","Promise","resolve"],"sources":["D:/Study/Semester 6/EAD/Usage of Web Workers in Modern Web Applications/my-react-app/src/services/fetchUser.js"],"sourcesContent":["//     const faker = require('faker');\r\n\r\n// function fetchUsers() {\r\n//     let users = [];\r\n\r\n//     for (let i = 0; i < 5000; i++) {\r\n//         let id = i + 1;\r\n//         let name = faker.name.findName();\r\n//         let email = faker.internet.email();\r\n//         let joinedOn = faker.date.recent();\r\n//         let commentCount = faker.random.number({ min: 0, max: 100 });\r\n//         let country = faker.address.country();\r\n//         let jobTitle = faker.name.jobTitle();\r\n//         let phoneNumber = faker.phone.phoneNumber();\r\n//         let avatar = faker.internet.avatar();\r\n//         let user = {\r\n//             id,\r\n//             name,\r\n//             email,\r\n//             joinedOn,\r\n//             commentCount,\r\n//             country,\r\n//             jobTitle,\r\n//             phoneNumber,\r\n//             avatar\r\n//         };\r\n//         users.push(user);\r\n//     }\r\n\r\n//     return users;\r\n// }\r\n\r\n// module.exports = fetchUsers;\r\nimport { faker } from '@faker-js/faker';\r\n\r\nexport function fetchUsers() {\r\n    const users = [];\r\n\r\n    for (let i = 0; i < 25000; i++) {\r\n        let id = i + 1;\r\n        let name = faker.person.fullName();\r\n        let email = faker.internet.email();\r\n        let joinedOn = faker.date.recent();\r\n        let commentCount = faker.number.int({ min: 0, max: 100 });\r\n        let user = {\r\n            id,\r\n            name,\r\n            email,\r\n            joinedOn,\r\n            commentCount\r\n        };\r\n        users.push(user);\r\n    }\r\n    return Promise.resolve(users);\r\n}"],"mappings":"AAAA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,SAASA,KAAK,QAAQ,iBAAiB;AAEvC,OAAO,SAASC,UAAUA,CAAA,EAAG;EACzB,MAAMC,KAAK,GAAG,EAAE;EAEhB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,KAAK,EAAEA,CAAC,EAAE,EAAE;IAC5B,IAAIC,EAAE,GAAGD,CAAC,GAAG,CAAC;IACd,IAAIE,IAAI,GAAGL,KAAK,CAACM,MAAM,CAACC,QAAQ,CAAC,CAAC;IAClC,IAAIC,KAAK,GAAGR,KAAK,CAACS,QAAQ,CAACD,KAAK,CAAC,CAAC;IAClC,IAAIE,QAAQ,GAAGV,KAAK,CAACW,IAAI,CAACC,MAAM,CAAC,CAAC;IAClC,IAAIC,YAAY,GAAGb,KAAK,CAACc,MAAM,CAACC,GAAG,CAAC;MAAEC,GAAG,EAAE,CAAC;MAAEC,GAAG,EAAE;IAAI,CAAC,CAAC;IACzD,IAAIC,IAAI,GAAG;MACPd,EAAE;MACFC,IAAI;MACJG,KAAK;MACLE,QAAQ;MACRG;IACJ,CAAC;IACDX,KAAK,CAACiB,IAAI,CAACD,IAAI,CAAC;EACpB;EACA,OAAOE,OAAO,CAACC,OAAO,CAACnB,KAAK,CAAC;AACjC"},"metadata":{},"sourceType":"module","externalDependencies":[]}